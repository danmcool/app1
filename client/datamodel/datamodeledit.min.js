app1.controller("DatamodelEditCtrl",["$scope","SessionService","DesignDataModel","$location","$routeParams","$mdDialog",function(e,t,o,r,n,a){e.sessionData=t.getSessionData(),e.$watch(function(){return t.getSessionData()},function(t,o){t!=o&&(e.sessionData=t)}),e.resolvePathObject=function(e,t){return""==t?e:void t.split(".").reduce(function(e,t,o,r){return o<r.length-1?(e||(e={}),void(e[t]||(e[t]={}))):e[t]},e)},e.field_type={text:{en:"Text",fr:"Texte"},number:{en:"Number",fr:"Nombre"},"boolean":{en:"Boolean",fr:"Boolean"},date:{en:"Date",fr:"Date"},currency:{en:"Amount",fr:"Montant"},item:{en:"Detail List",fr:"Liste de dÃ©tails"},feed:{en:"Discussion Feed",fr:"Fil de discussion"},file:{en:"File",fr:"Fichier"},address:{en:"Address",fr:"Adresse"},node:{en:"Node",fr:"Noeud"}};var s=Object.keys(e.field_type);for(e.field_types=[],i=0;i<s.length;i++)e.field_types.push({translated_name:t.translate(e.field_type[s[i]]),type:s[i]});e.datamodel_keys=[],o.get({id:n.id},function(o,r){if(o)if(e.datamodel=o,e.datamodel.projection)for(var n=Object.keys(e.datamodel.projection),a=0;a<n.length;a++)e.datamodel_keys.push({path:e.datamodel.projection[n[a]].path,technical_name:e.datamodel.projection[n[a]].path,type:e.datamodel.projection[n[a]].type,translated_name:t.translate(e.datamodel.projection[n[a]].name),id:n[a]});else e.datamodel.projection={};else e.datamodel={projection:{}};e.datamodel_keys.sort(function(e,t){return 0==e.path.trim().localeCompare(t.path.trim())?e.technical_name.trim().localeCompare(t.technical_name.trim()):e.path.trim().localeCompare(t.path.trim())}),e.sessionData.applicationName=e.sessionData.appData.app_designer,t.setSessionData(e.sessionData)}),e.editText=function(e,t,o){e[t]||(e[t]={}),a.show({templateUrl:"designer/text.html",controller:"TextCtrl",locals:{text:e[t],multipleLines:o},parent:angular.element(document.body),clickOutsideToClose:!0}).then(function(o){e[t]=o})},e.editForm=function(o){DesignWorkflow.update({id:e.workflow._id},e.workflow).$promise.then(function(r){t.init(),t.location("/form_edit/"+o+"?application_id="+n.application_id+"&workflow_id="+e.workflow._id)})["catch"](function(t){e.application=t.application,updateErrorAlert()})},e.newField=function(t){a.show({templateUrl:"datamodel/new.html",controller:"NewFieldCtrl",locals:{field_types:e.field_types},parent:angular.element(document.body),clickOutsideToClose:!0}).then(function(o){var r=Object.keys(e.datamodel.projection),n=r.length;do n+=1;while(e.datamodel.projection[n]);o.path=t,e.datamodel.projection[n]=o,e.datamodel_keys.push({path:o.path,technical_name:o.technical_name,type:o.type,translated_name:"",id:n}),e.datamodel_keys.sort(function(e,t){return 0==e.path.trim().localeCompare(t.path.trim())?e.technical_name.trim().localeCompare(t.technical_name.trim()):e.path.trim().localeCompare(t.path.trim())})})},e.save=function(){e.datamodel.datamodel=""+e.datamodel.datamodel,o.update({id:e.datamodel._id},e.datamodel).$promise.then(function(e){t.location("/datamodel/")})["catch"](function(t){e.datamodel=t.datamodel,updateErrorAlert()})}}]);
