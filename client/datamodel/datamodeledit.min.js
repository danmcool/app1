app1.controller("DatamodelEditCtrl",["$scope","SessionService","DesignDataModel","$location","$routeParams","$mdDialog",function(e,t,a,o,n,r){e.sessionData=t.getSessionData(),e.$watch(function(){return t.getSessionData()},function(t,a){t!=a&&(e.sessionData=t)}),e.sessionData.applicationName=e.sessionData.appData.datamodel_designer,t.setSessionData(e.sessionData),e.field_type={text:{en:"Text",fr:"Texte"},number:{en:"Number",fr:"Nombre"},"boolean":{en:"Boolean",fr:"Boolean"},date:{en:"Date",fr:"Date"},currency:{en:"Amount",fr:"Montant"},reference:{en:"Detail",fr:"Détail"},item:{en:"Detail List",fr:"Liste de détails"},feed:{en:"Discussion Feed",fr:"Fil de discussion"},file:{en:"File",fr:"Fichier"},address:{en:"Address",fr:"Adresse"},node:{en:"Node",fr:"Noeud"}};var s=Object.keys(e.field_type);for(e.field_types=[],i=0;i<s.length;i++)e.field_type[s[i]].translated_name=t.translate(e.field_type[s[i]]),e.field_types.push({translated_name:e.field_type[s[i]].translated_name,type:s[i]});e.datamodel_keys=[],a.get({id:n.id},function(t,a){if(t)if(e.datamodel=t,e.datamodel.projection)for(var o=Object.keys(e.datamodel.projection),n=0;n<o.length;n++){var i=e.datamodel.projection[o[n]];i.id=o[n],i.full_path=""==i.path?i.technical_name:i.path+"."+i.technical_name,e.datamodel_keys.push(i)}else e.datamodel.projection={};else e.datamodel={projection:{}};e.datamodel_keys.sort(function(e,t){return e.full_path.trim().localeCompare(t.full_path.trim())})}),e.editText=function(e,t,a,o){e[t]||(e[t]={}),r.show({templateUrl:"designer/text.html",controller:"TextCtrl",locals:{text:e[t],multipleLines:a},parent:angular.element(document.body),clickOutsideToClose:!0}).then(function(a){e[t]=a})},e.editTextCopy=function(e,t,a,o){e[t]||(e[t]={}),r.show({templateUrl:"designer/text.html",controller:"TextCtrl",locals:{text:e[t],multipleLines:a},parent:angular.element(document.body),clickOutsideToClose:!0}).then(function(a){e[t]=a})},e.editForm=function(a){DesignWorkflow.update({id:e.workflow._id},e.workflow).$promise.then(function(o){t.init(),t.location("/form_edit/"+a+"?application_id="+n.application_id+"&workflow_id="+e.workflow._id)})["catch"](function(t){e.application=t.application,updateErrorAlert()})};var l=function(){var t=Object.keys(e.datamodel.projection).length;do t+=1;while(e.datamodel.projection[t]);return t};e.newField=function(t,a){r.show({templateUrl:"datamodel/new.html",controller:"NewFieldCtrl",locals:{field_types:e.field_types},parent:angular.element(document.body),clickOutsideToClose:!0}).then(function(o){var n=l();if(o.path=""==t?a:t+"."+a,o.full_path=""==o.path?o.technical_name:o.path+"."+o.technical_name,e.datamodel.projection[n]=o,e.datamodel_keys.push(e.datamodel.projection[n]),"address"==o.type){var i=l();e.datamodel.projection[i]={path:o.full_path,type:"text",technical_name:"address_line1",full_path:o.full_path+".address_line1",name:{en:"Address Line 1",fr:"Adresse ligne 1"}},e.datamodel_keys.push(e.datamodel.projection[i]);var r=l();e.datamodel.projection[r]={path:o.full_path,type:"text",technical_name:"address_line2",full_path:o.full_path+".address_line2",name:{en:"Address Line 2",fr:"Adresse ligne 2"}},e.datamodel_keys.push(e.datamodel.projection[r]);var s=l();e.datamodel.projection[s]={path:o.full_path,type:"text",technical_name:"address_city",full_path:o.full_path+".address_city",name:{en:"City",fr:"Ville"}},e.datamodel_keys.push(e.datamodel.projection[s]);var d=l();e.datamodel.projection[d]={path:o.full_path,type:"text",technical_name:"address_state",full_path:o.full_path+".address_state",name:{en:"State",fr:"Region"}},e.datamodel_keys.push(e.datamodel.projection[d]);var c=l();e.datamodel.projection[c]={path:o.full_path,type:"text",technical_name:"address_postal_code",full_path:o.full_path+".address_postal_code",name:{en:"Postal Code",fr:"Code Postal"}},e.datamodel_keys.push(e.datamodel.projection[c]);var p=l();e.datamodel.projection[p]={path:o.full_path,type:"text",technical_name:"address_country",full_path:o.full_path+".address_country",name:{en:"Country",fr:"Pays"}},e.datamodel_keys.push(e.datamodel.projection[p])}e.datamodel_keys.sort(function(e,t){return e.full_path.trim().localeCompare(t.full_path.trim())})})},e.save=function(){a.update({id:e.datamodel._id},e.datamodel).$promise.then(function(e){t.location("/datamodel/")})["catch"](function(t){e.datamodel=t.datamodel,updateErrorAlert()})}}]);
