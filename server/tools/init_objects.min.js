var mongoose=require("mongoose"),fs=require("fs"),saml2=require("saml2-js"),Schema=mongoose.Schema,Metadata=require("../models/metadata.js"),Constants=require("../tools/constants.js"),SessionCache=require("../tools/session_cache.js"),prepareIndex=function(e,a,t){if("object"==typeof e){var o=Object.keys(e);""!=a&&(a+=".");for(var i=0;i<o.length;i++){var r=a+o[i];e[o[i]]&&e[o[i]].index&&(t.fields[r]="text",t.options.weights[r]=e[o[i]].index_weight),prepareIndex(e[o[i]],r,t)}}},DataModel=Metadata.DataModel;DataModel.find(function(e,a){if(e)return next(e);for(var t=0;t<a.length;t++){var o,i=JSON.parse(a[t].datamodel?a[t].datamodel:"{}");if(i._ref==Constants.DataModelUserId)Metadata.Objects[a[t]._id]=Metadata.User;else{try{i._updated_at="Date",i._company_code="String",i._user="String",i._files=[{type:Schema.Types.ObjectId,ref:"File"}],o=new Schema(i)}catch(r){console.log(r),o=new Schema({})}var n={fields:{},options:{name:"_search",weights:{}}},s=a[t].projection?a[t].projection:{};prepareIndex(s,"",n),o.index(n.fields,n.options),Metadata.Objects[a[t]._id]=mongoose.model(Constants.DataModelPrefix+a[t]._id,o)}}});var sp_options={entity_id:"app1_saml_metadata.xml",private_key:fs.readFileSync("./server/ssl/app1-key.pem","utf8"),certificate:fs.readFileSync("./server/ssl/app1-cert.crt","utf8"),assert_endpoint:"https://app1.cloud/authentication/saml_callback",force_authn:!1,sign_get_request:!1,allow_unencrypted_assertion:!0};SessionCache.serviceProvider=new saml2.ServiceProvider(sp_options);
