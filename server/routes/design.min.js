var express=require("express"),router=express.Router(),mongoose=require("mongoose"),Schema=mongoose.Schema,Metadata=require("../models/metadata.js"),SessionCache=require("../tools/session_cache.js"),Constants=require("../tools/constants.js"),Email=require("../tools/email.js"),DatamodelTools=require("../tools/datamodel_tools.js"),DataModel=Metadata.DataModel,User=Metadata.User,Company=Metadata.Company,UserProfile=Metadata.UserProfile,Application=Metadata.Application,Workflow=Metadata.Workflow,Form=Metadata.Form,Value=Metadata.Value,computePage=function(e){return pageOptions={skip:parseInt(e.query.skip)||Constants.QuerySkip,limit:parseInt(e.query.limit)||Constants.QueryLimit}};router.get("/application",function(e,o,t){var s=e.cookies[Constants.SessionCookie];if(SessionCache.userData[s].profile.type!=Constants.UserProfileAdministrator)return o.status(401).json({err:"Not enough user rights"});var r=computePage(e);Application.find(SessionCache.filterApplicationCompanyCode(e,{})).populate("profiles").skip(r.skip).limit(r.limit).exec(function(e,s){return e?t(e):void o.json(s)})}),router.post("/application/",function(e,o,t){var s=e.cookies[Constants.SessionCookie];return SessionCache.userData[s].profile.type!=Constants.UserProfileAdministrator?o.status(401).json({err:"Not enough user rights"}):(SessionCache.filterCompanyCode(e,{}),void Application.create(e.body,function(e,s){return e?t(e):void o.json(s)}))}),router.get("/application/:id/",function(e,o,t){var s=e.cookies[Constants.SessionCookie];return SessionCache.userData[s].profile.type!=Constants.UserProfileAdministrator?o.status(401).json({err:"Not enough user rights"}):void Application.findOne(SessionCache.filterCompanyCode(e,{_id:e.params.id})).populate("file workflows").exec(function(e,s){return e?t(e):void o.json(s)})}),router.put("/application/:id",function(e,o,t){var s=e.cookies[Constants.SessionCookie];return SessionCache.userData[s].profile.type!=Constants.UserProfileAdministrator?o.status(401).json({err:"Not enough user rights"}):void Application.findOneAndUpdate(SessionCache.filterCompanyCode(e,{_id:e.body._id}),e.body,function(e,s){return e?t(e):void o.json(s)})}),router["delete"]("/application/:id",function(e,o,t){var s=e.cookies[Constants.SessionCookie];return SessionCache.userData[s].profile.type!=Constants.UserProfileAdministrator?o.status(401).json({err:"Not enough user rights"}):void Application.findOneAndRemove(SessionCache.filterCompanyCode(e,{_id:e.params.id}),function(e,s){return e?t(e):void o.json(s)})}),router.post("/workflow/",function(e,o,t){var s=e.cookies[Constants.SessionCookie];return SessionCache.userData[s].profile.type!=Constants.UserProfileAdministrator?o.status(401).json({err:"Not enough user rights"}):(SessionCache.filterCompanyCode(e,{}),void Workflow.create(e.body,function(e,s){return e?t(e):void o.json(s)}))}),router.get("/workflow/:id",function(e,o,t){var s=e.cookies[Constants.SessionCookie];return SessionCache.userData[s].profile.type!=Constants.UserProfileAdministrator?o.status(401).json({err:"Not enough user rights"}):void Workflow.findOne(SessionCache.filterCompanyCode(e,{_id:e.params.id})).populate("file forms").exec(function(e,s){return e?t(e):void o.json(s)})}),router.put("/workflow/:id",function(e,o,t){var s=e.cookies[Constants.SessionCookie];return SessionCache.userData[s].profile.type!=Constants.UserProfileAdministrator?o.status(401).json({err:"Not enough user rights"}):void Workflow.findOneAndUpdate(SessionCache.filterCompanyCode(e,{_id:e.body._id}),e.body,function(e,s){return e?t(e):void o.json(s)})}),router["delete"]("/workflow/:id",function(e,o,t){var s=e.cookies[Constants.SessionCookie];return SessionCache.userData[s].profile.type!=Constants.UserProfileAdministrator?o.status(401).json({err:"Not enough user rights"}):void Workflow.findOneAndRemove(SessionCache.filterCompanyCode(e,{_id:e.params.id}),function(e,s){return e?t(e):void o.json(s)})}),router.post("/form",function(e,o,t){var s=e.cookies[Constants.SessionCookie];return SessionCache.userData[s].profile.type!=Constants.UserProfileAdministrator?o.status(401).json({err:"Not enough user rights"}):(SessionCache.filterCompanyCode(e,{}),void Form.create(e.body,function(e,s){return e?t(e):void o.json(s)}))}),router.get("/form/:id",function(e,o,t){var s=e.cookies[Constants.SessionCookie];return SessionCache.userData[s].profile.type!=Constants.UserProfileAdministrator?o.status(401).json({err:"Not enough user rights"}):void Form.findOne(SessionCache.filterApplicationCompanyCode(e,{_id:{$eq:e.params.id}})).populate("datamodel values").exec(function(e,s){return e?t(e):s?o.status(200).json(s):o.status(400).json({msg:"Object is null!"})})}),router.put("/form/:id",function(e,o,t){var s=e.cookies[Constants.SessionCookie];return SessionCache.userData[s].profile.type!=Constants.UserProfileAdministrator?o.status(401).json({err:"Not enough user rights"}):void Form.findOneAndUpdate(SessionCache.filterCompanyCode(e,{_id:e.body._id}),e.body,function(e,s){return e?t(e):void o.json(s)})}),router["delete"]("/form/:id",function(e,o,t){var s=e.cookies[Constants.SessionCookie];return SessionCache.userData[s].profile.type!=Constants.UserProfileAdministrator?o.status(401).json({err:"Not enough user rights"}):void Form.findOneAndRemove(SessionCache.filterCompanyCode(e,{_id:e.params.id}),function(e,s){return e?t(e):void o.json(s)})}),router.post("/value",function(e,o,t){var s=e.cookies[Constants.SessionCookie];return SessionCache.userData[s].profile.type!=Constants.UserProfileAdministrator?o.status(401).json({err:"Not enough user rights"}):(SessionCache.filterCompanyCode(e,{}),void Value.create(e.body,function(e,s){return e?t(e):void o.json(s)}))}),router.get("/value/:id",function(e,o,t){var s=e.cookies[Constants.SessionCookie];return SessionCache.userData[s].profile.type!=Constants.UserProfileAdministrator?o.status(401).json({err:"Not enough user rights"}):void Value.findOne(SessionCache.filterApplicationCompanyCode(e,{_id:{$eq:e.params.id}})).exec(function(e,s){return e?t(e):s?o.status(200).json(s):o.status(400).json({msg:"Object is null!"})})}),router.put("/value/:id",function(e,o,t){var s=e.cookies[Constants.SessionCookie];return SessionCache.userData[s].profile.type!=Constants.UserProfileAdministrator?o.status(401).json({err:"Not enough user rights"}):void Value.findOneAndUpdate(SessionCache.filterCompanyCode(e,{_id:e.body._id}),e.body,function(e,s){return e?t(e):void o.json(s)})}),router["delete"]("/value/:id",function(e,o,t){var s=e.cookies[Constants.SessionCookie];return SessionCache.userData[s].profile.type!=Constants.UserProfileAdministrator?o.status(401).json({err:"Not enough user rights"}):void Value.findOneAndRemove(SessionCache.filterCompanyCode(e,{_id:e.params.id}),function(e,s){return e?t(e):void o.json(s)})}),router.get("/datamodel",function(e,o,t){var s=e.cookies[Constants.SessionCookie];if(SessionCache.userData[s].profile.type!=Constants.UserProfileAdministrator)return o.status(401).json({err:"Not enough user rights"});var r=computePage(e);DataModel.find(SessionCache.filterApplicationCompanyCode(e,{})).skip(r.skip).limit(r.limit).exec(function(e,s){return e?t(e):void o.json(s)})}),router.post("/datamodel",function(e,o,t){var s=e.cookies[Constants.SessionCookie];return SessionCache.userData[s].profile.type!=Constants.UserProfileAdministrator?o.status(401).json({err:"Not enough user rights"}):(SessionCache.filterCompanyCode(e,{}),void(datamodel.properties&&datamodel.properties.reference==Constants.DataModelUserId?DataModel.create(e.body,function(e,s){return e?t(e):(Metadata.Objects[s._id]=Metadata.User,module.exports=Metadata,o.json(s))}):DataModel.create(e.body,function(s,r){if(s)return t(s);var n;try{n=new Schema(DatamodelTools.buildDataModel(e.body.projection))}catch(a){console.log(a),n=new Schema({})}return Metadata.Objects[r._id]=mongoose.model("data"+r._id,n),module.exports=Metadata,o.json(r)})))}),router.get("/datamodel/:id",function(e,o,t){var s=e.cookies[Constants.SessionCookie];return SessionCache.userData[s].profile.type!=Constants.UserProfileAdministrator?o.status(401).json({err:"Not enough user rights"}):void DataModel.findOne(SessionCache.filterCompanyCode(e,{_id:e.params.id})).exec(function(e,s){return e?t(e):s?o.status(200).json(s):o.status(400).json({msg:"Object is null!"})})}),router.put("/datamodel/:id",function(e,o,t){var s=e.cookies[Constants.SessionCookie];if(SessionCache.userData[s].profile.type!=Constants.UserProfileAdministrator)return o.status(401).json({err:"Not enough user rights"});delete mongoose.connection.models["data"+e.body._id],delete mongoose.modelSchemas["data"+e.body._id],delete Metadata.Objects[e.body._id];var r;try{r=new Schema(DatamodelTools.buildDataModel(e.body.projection))}catch(n){return console.log(n),r=new Schema({}),o.status(400),o.json(e.body)}Metadata.Objects[e.body._id]=mongoose.model("data"+e.body._id,r),module.exports=Metadata,DataModel.findOneAndUpdate(SessionCache.filterCompanyCode(e,{_id:e.body._id}),e.body,function(e,s){return e?t(e):o.json(s)})}),router["delete"]("/datamodel/:id",function(e,o,t){var s=e.cookies[Constants.SessionCookie];return SessionCache.userData[s].profile.type!=Constants.UserProfileAdministrator?o.status(401).json({err:"Not enough user rights"}):void DataModel.findOneAndRemove(SessionCache.filterCompanyCode(e,{_id:e.params.id}),function(s,r){return s?t(s):(delete mongoose.connection.models["data"+e.params._id],delete mongoose.modelSchemas["data"+e.params._id],delete Metadata.Objects[e.params._id],void o.json(r))})}),module.exports=router;
