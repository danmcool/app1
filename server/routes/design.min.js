var express=require("express"),router=express.Router(),mongoose=require("mongoose"),Schema=mongoose.Schema,Metadata=require("../models/metadata.js"),SessionCache=require("../tools/session_cache.js"),Constants=require("../tools/constants.js"),DatamodelTools=require("../tools/datamodel_tools.js"),DataModel=Metadata.DataModel,Application=Metadata.Application,Workflow=Metadata.Workflow,Form=Metadata.Form,Value=Metadata.Value,computePage=function(e){return{skip:parseInt(e.query.skip)||Constants.QuerySkip,limit:parseInt(e.query.limit)||Constants.QueryLimit}};router.get("/application",function(e,a,t){var o=e.cookies[Constants.SessionCookie];if(SessionCache.userData[o].profile.type!=Constants.UserProfileAdministrator)return a.status(401).json({err:"Not enough user rights"});var s=computePage(e);Application.find(SessionCache.filterApplicationCompanyCode(e,{})).populate("profiles").skip(s.skip).limit(s.limit).exec(function(e,o){return e?t(e):void a.json(o)})}),router.post("/application/",function(e,a,t){var o=e.cookies[Constants.SessionCookie];return SessionCache.userData[o].profile.type!=Constants.UserProfileAdministrator?a.status(401).json({err:"Not enough user rights"}):(SessionCache.filterCompanyCode(e,{}),void Application.create(e.body,function(e,o){return e?t(e):void a.json(o)}))}),router.get("/application/:id/",function(e,a,t){var o=e.cookies[Constants.SessionCookie];return SessionCache.userData[o].profile.type!=Constants.UserProfileAdministrator?a.status(401).json({err:"Not enough user rights"}):void Application.findOne(SessionCache.filterCompanyCode(e,{_id:e.params.id})).populate("file workflows").exec(function(e,o){return e?t(e):void a.json(o)})}),router.put("/application/:id",function(e,a,t){var o=e.cookies[Constants.SessionCookie];return SessionCache.userData[o].profile.type!=Constants.UserProfileAdministrator?a.status(401).json({err:"Not enough user rights"}):void Application.findOneAndUpdate(SessionCache.filterCompanyCode(e,{_id:e.body._id}),e.body,function(e,o){return e?t(e):void a.json(o)})}),router["delete"]("/application/:id",function(e,a,t){var o=e.cookies[Constants.SessionCookie];return SessionCache.userData[o].profile.type!=Constants.UserProfileAdministrator?a.status(401).json({err:"Not enough user rights"}):void Application.findOneAndRemove(SessionCache.filterCompanyCode(e,{_id:e.params.id}),function(e,o){return e?t(e):void a.json(o)})}),router.post("/workflow/",function(e,a,t){var o=e.cookies[Constants.SessionCookie];return SessionCache.userData[o].profile.type!=Constants.UserProfileAdministrator?a.status(401).json({err:"Not enough user rights"}):(SessionCache.filterCompanyCode(e,{}),void Workflow.create(e.body,function(e,o){return e?t(e):void a.json(o)}))}),router.get("/workflow/:id",function(e,a,t){var o=e.cookies[Constants.SessionCookie];return SessionCache.userData[o].profile.type!=Constants.UserProfileAdministrator?a.status(401).json({err:"Not enough user rights"}):void Workflow.findOne(SessionCache.filterCompanyCode(e,{_id:e.params.id})).populate("file forms").exec(function(e,o){return e?t(e):void a.json(o)})}),router.put("/workflow/:id",function(e,a,t){var o=e.cookies[Constants.SessionCookie];return SessionCache.userData[o].profile.type!=Constants.UserProfileAdministrator?a.status(401).json({err:"Not enough user rights"}):void Workflow.findOneAndUpdate(SessionCache.filterCompanyCode(e,{_id:e.body._id}),e.body,function(e,o){return e?t(e):void a.json(o)})}),router["delete"]("/workflow/:id",function(e,a,t){var o=e.cookies[Constants.SessionCookie];return SessionCache.userData[o].profile.type!=Constants.UserProfileAdministrator?a.status(401).json({err:"Not enough user rights"}):void Workflow.findOneAndRemove(SessionCache.filterCompanyCode(e,{_id:e.params.id}),function(e,o){return e?t(e):void a.json(o)})}),router.post("/form",function(e,a,t){var o=e.cookies[Constants.SessionCookie];return SessionCache.userData[o].profile.type!=Constants.UserProfileAdministrator?a.status(401).json({err:"Not enough user rights"}):(SessionCache.filterCompanyCode(e,{}),void Form.create(e.body,function(e,o){return e?t(e):void a.json(o)}))}),router.get("/form/:id",function(e,a,t){var o=e.cookies[Constants.SessionCookie];return SessionCache.userData[o].profile.type!=Constants.UserProfileAdministrator?a.status(401).json({err:"Not enough user rights"}):void Form.findOne(SessionCache.filterApplicationCompanyCode(e,{_id:{$eq:e.params.id}})).populate("datamodel values").exec(function(e,o){return e?t(e):o?a.status(200).json(o):a.status(400).json({msg:"Object is null!"})})}),router.put("/form/:id",function(e,a,t){var o=e.cookies[Constants.SessionCookie];return SessionCache.userData[o].profile.type!=Constants.UserProfileAdministrator?a.status(401).json({err:"Not enough user rights"}):void Form.findOneAndUpdate(SessionCache.filterCompanyCode(e,{_id:e.body._id}),e.body,function(e,o){return e?t(e):void a.json(o)})}),router["delete"]("/form/:id",function(e,a,t){var o=e.cookies[Constants.SessionCookie];return SessionCache.userData[o].profile.type!=Constants.UserProfileAdministrator?a.status(401).json({err:"Not enough user rights"}):void Form.findOneAndRemove(SessionCache.filterCompanyCode(e,{_id:e.params.id}),function(e,o){return e?t(e):void a.json(o)})}),router.get("/value",function(e,a,t){var o=e.cookies[Constants.SessionCookie];if(SessionCache.userData[o].profile.type!=Constants.UserProfileAdministrator)return a.status(401).json({err:"Not enough user rights"});var s=computePage(e);Value.find(SessionCache.filterApplicationCompanyCode(e,{})).skip(s.skip).limit(s.limit).exec(function(e,o){return e?t(e):void a.json(o)})}),router.post("/value",function(e,a,t){var o=e.cookies[Constants.SessionCookie];return SessionCache.userData[o].profile.type!=Constants.UserProfileAdministrator?a.status(401).json({err:"Not enough user rights"}):(SessionCache.filterCompanyCode(e,{}),void Value.create(e.body,function(e,o){return e?t(e):void a.json(o)}))}),router.get("/value/:id",function(e,a,t){var o=e.cookies[Constants.SessionCookie];return SessionCache.userData[o].profile.type!=Constants.UserProfileAdministrator?a.status(401).json({err:"Not enough user rights"}):void Value.findOne(SessionCache.filterApplicationCompanyCode(e,{_id:{$eq:e.params.id}})).exec(function(e,o){return e?t(e):o?a.status(200).json(o):a.status(400).json({msg:"Object is null!"})})}),router.put("/value/:id",function(e,a,t){var o=e.cookies[Constants.SessionCookie];return SessionCache.userData[o].profile.type!=Constants.UserProfileAdministrator?a.status(401).json({err:"Not enough user rights"}):void Value.findOneAndUpdate(SessionCache.filterCompanyCode(e,{_id:e.body._id}),e.body,function(e,o){return e?t(e):void a.json(o)})}),router["delete"]("/value/:id",function(e,a,t){var o=e.cookies[Constants.SessionCookie];return SessionCache.userData[o].profile.type!=Constants.UserProfileAdministrator?a.status(401).json({err:"Not enough user rights"}):void Value.findOneAndRemove(SessionCache.filterCompanyCode(e,{_id:e.params.id}),function(e,o){return e?t(e):void a.json(o)})}),router.get("/datamodel",function(e,a,t){var o=e.cookies[Constants.SessionCookie];if(SessionCache.userData[o].profile.type!=Constants.UserProfileAdministrator)return a.status(401).json({err:"Not enough user rights"});var s=computePage(e);DataModel.find(SessionCache.filterApplicationCompanyCode(e,{})).skip(s.skip).limit(s.limit).exec(function(e,o){return e?t(e):void a.json(o)})}),router.post("/datamodel",function(e,a,t){var o=e.cookies[Constants.SessionCookie];if(SessionCache.userData[o].profile.type!=Constants.UserProfileAdministrator)return a.status(401).json({err:"Not enough user rights"});if(SessionCache.filterCompanyCode(e,{}),!e.body.properties||e.body.properties.reference!=Constants.DataModelUserId&&e.body.properties.reference!=Constants.DataModelFileId){var s,i={fields:{},options:{name:Constants.DataModelIndexName,weights:{}}};try{s=new Schema(DatamodelTools.buildDataModel(e.body.projection,i))}catch(r){return console.log(r),s=new Schema({}),a.status(400),a.json(e.body)}DataModel.create(e.body,function(o,r){return o?t(o):(s.index(i.fields,i.options),Metadata.Objects[r._id]=mongoose.model(Constants.DataModelPrefix+r._id,s,Constants.DataModelPrefix+e.body._id),module.exports=Metadata,a.json(r))})}else DataModel.create(e.body,function(e,o){return e?t(e):(Metadata.Objects[o._id]=Metadata.User,module.exports=Metadata,a.json(o))})}),router.get("/datamodel/:id",function(e,a,t){var o=e.cookies[Constants.SessionCookie];return SessionCache.userData[o].profile.type!=Constants.UserProfileAdministrator?a.status(401).json({err:"Not enough user rights"}):void DataModel.findOne(SessionCache.filterCompanyCode(e,{_id:e.params.id})).exec(function(e,o){return e?t(e):o?a.status(200).json(o):a.status(400).json({msg:"Object is null!"})})}),router.put("/datamodel/:id",function(e,a,t){var o=e.cookies[Constants.SessionCookie];if(SessionCache.userData[o].profile.type!=Constants.UserProfileAdministrator)return a.status(401).json({err:"Not enough user rights"});if(!e.body.properties||e.body.properties.reference!=Constants.DataModelUserId&&e.body.properties.reference!=Constants.DataModelFileId){var s,i={fields:{},options:{name:Constants.DataModelIndexName,weights:{}}};try{s=new Schema(DatamodelTools.buildDataModel(e.body.projection,i))}catch(r){return console.log(r),s=new Schema({}),a.status(400),a.json(e.body)}DataModel.findOneAndUpdate(SessionCache.filterCompanyCode(e,{_id:e.body._id}),e.body,function(e,o){return e?t(e):(mongoose.connections[0].collections[Constants.DataModelPrefix+o._id]&&mongoose.connections[0].collections[Constants.DataModelPrefix+o._id].dropIndex(Constants.DataModelIndexName),delete mongoose.connection.models[Constants.DataModelPrefix+o._id],delete mongoose.modelSchemas[Constants.DataModelPrefix+o._id],delete Metadata.Objects[o._id],s.index(i.fields,i.options),Metadata.Objects[o._id]=mongoose.model(Constants.DataModelPrefix+o._id,s,Constants.DataModelPrefix+o._id),module.exports=Metadata,a.json(o))})}else DataModel.findOneAndUpdate(SessionCache.filterCompanyCode(e,{_id:e.body._id}),e.body,function(e,o){return e?t(e):a.json(o)})}),router["delete"]("/datamodel/:id",function(e,a,t){var o=e.cookies[Constants.SessionCookie];return SessionCache.userData[o].profile.type!=Constants.UserProfileAdministrator?a.status(401).json({err:"Not enough user rights"}):void DataModel.findOneAndRemove(SessionCache.filterCompanyCode(e,{_id:e.params.id}),function(o,s){return o?t(o):(s.properties&&!s.properties.reference&&(delete mongoose.connection.models[Constants.DataModelPrefix+e.params._id],delete mongoose.modelSchemas[Constants.DataModelPrefix+e.params._id],delete Metadata.Objects[e.params._id]),void a.json(s))})}),module.exports=router;
