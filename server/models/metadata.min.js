var mongoose=require("mongoose"),Schema=mongoose.Schema,Metadata={Objects:{}},DataModelSchema=new Schema({name:Schema.Types.Mixed,datamodel:Schema.Types.Mixed,translation:Schema.Types.Mixed,_updated_at:{type:Date,"default":Date.now},_company_code:String});Metadata.DataModel=mongoose.model("DataModel",DataModelSchema);var ValueSchema=new Schema({name:Schema.Types.Mixed,type:String,values:Schema.Types.Mixed,_updated_at:{type:Date,"default":Date.now},_company_code:String});Metadata.Value=mongoose.model("Value",ValueSchema);var FileSchema=new Schema({name:String,type:String,storage:String,path:String,file_id:String,_updated_at:{type:Date,"default":Date.now},_company_code:String});Metadata.File=mongoose.model("File",FileSchema);var FormSchema=new Schema({name:Schema.Types.Mixed,datamodel:{type:Schema.Types.ObjectId,ref:"DataModel"},values:[{type:Schema.Types.ObjectId,ref:"Value"}],display:Schema.Types.Mixed,search_criteria:String,sort_by:String,actions:Schema.Types.Mixed,_updated_at:{type:Date,"default":Date.now},_company_code:String});Metadata.Form=mongoose.model("Form",FormSchema);var WorkflowSchema=new Schema({name:Schema.Types.Mixed,description:Schema.Types.Mixed,icon:String,startup_form:{type:Schema.Types.ObjectId,ref:"Form"},forms:[{type:Schema.Types.ObjectId,ref:"Form"}],_updated_at:{type:Date,"default":Date.now},_company_code:String});Metadata.Workflow=mongoose.model("Workflow",WorkflowSchema);var ApplicationSchema=new Schema({name:Schema.Types.Mixed,description:Schema.Types.Mixed,icon:Schema.Types.Mixed,active:{type:Boolean,"default":!1},type:String,file:{type:Schema.Types.ObjectId,ref:"File"},url:String,workflows:[{type:Schema.Types.ObjectId,ref:"Workflow"}],profiles:[{type:Schema.Types.ObjectId,ref:"UserProfile"}],default_profile:{type:Schema.Types.ObjectId,ref:"UserProfile"},properties:Schema.Types.Mixed,_updated_at:{type:Date,"default":Date.now},_company_code:String});Metadata.Application=mongoose.model("Application",ApplicationSchema);var UserProfileSchema=new Schema({name:Schema.Types.Mixed,type:String,profile:Schema.Types.Mixed,properties:Schema.Types.Mixed,_updated_at:{type:Date,"default":Date.now},_company_code:String});Metadata.UserProfile=mongoose.model("UserProfile",UserProfileSchema);var SessionSchema=new Schema({user:{type:Schema.Types.ObjectId,ref:"User"},timeout:Date,properties:String,_updated_at:{type:Date,"default":Date.now},_company_code:String});Metadata.Session=mongoose.model("Session",SessionSchema);var CompanySchema=new Schema({name:String,applications:[{type:Schema.Types.ObjectId,ref:"Application"}],properties:Schema.Types.Mixed,_updated_at:{type:Date,"default":Date.now},_company_code:{type:String,unique:!0}});Metadata.Company=mongoose.model("Company",CompanySchema);var UserSchema=new Schema({user:{type:String,unique:!0},password:String,email:String,firstname:String,lastname:String,properties:Schema.Types.Mixed,validated:{type:Boolean,"default":!1},profile:{type:Schema.Types.ObjectId,ref:"UserProfile"},remote_profiles:[{type:Schema.Types.ObjectId,ref:"UserProfile"}],company:{type:Schema.Types.ObjectId,ref:"Company"},manager:{type:Schema.Types.ObjectId,ref:"User"},reports:[{type:Schema.Types.ObjectId,ref:"User"}],_updated_at:{type:Date,"default":Date.now},_company_code:String});Metadata.User=mongoose.model("User",UserSchema),module.exports=Metadata;
